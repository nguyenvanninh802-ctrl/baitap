using week2day5.Models;

namespace week2day5.Services;

public class TodoService
{
    private readonly List<Todo> _todos = new();
    private int _nextId = 1;

    // Th√™m c√¥ng vi·ªác
    public void Add(string title)
    {
        var todo = new Todo
        {
            Id = _nextId++,
            Title = title,
            IsCompleted = false
        };
        _todos.Add(todo);
        Console.WriteLine("‚úÖ ƒê√£ th√™m c√¥ng vi·ªác!\n");
    }

    // Xem t·∫•t c·∫£ c√¥ng vi·ªác
    public void ViewAll()
    {
        if (_todos.Count == 0)
        {
            Console.WriteLine("‚ö†Ô∏è Ch∆∞a c√≥ c√¥ng vi·ªác n√†o.\n");
            return;
        }

        Console.WriteLine("üìã Danh s√°ch c√¥ng vi·ªác:");
        foreach (var todo in _todos)
        {
            Console.WriteLine(todo);
        }
        Console.WriteLine();
    }

    // C·∫≠p nh·∫≠t c√¥ng vi·ªác
    public void Update(int id, string newTitle)
    {
        var todo = _todos.FirstOrDefault(t => t.Id == id);
        if (todo == null)
        {
            Console.WriteLine("‚ùå Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác!\n");
            return;
        }

        todo.Title = newTitle;
        Console.WriteLine("‚úèÔ∏è ƒê√£ c·∫≠p nh·∫≠t c√¥ng vi·ªác!\n");
    }

    // Xo√° c√¥ng vi·ªác
    public void Delete(int id)
    {
        var todo = _todos.FirstOrDefault(t => t.Id == id);
        if (todo == null)
        {
            Console.WriteLine("‚ùå Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác!\n");
            return;
        }

        _todos.Remove(todo);
        Console.WriteLine("üóëÔ∏è ƒê√£ xo√° c√¥ng vi·ªác!\n");
    }

    // ƒê√°nh d·∫•u ho√†n th√†nh / ch∆∞a xong
    public void ToggleStatus(int id)
    {
        var todo = _todos.FirstOrDefault(t => t.Id == id);
        if (todo == null)
        {
            Console.WriteLine("‚ùå Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác!\n");
            return;
        }

        todo.IsCompleted = !todo.IsCompleted;
        Console.WriteLine("üîÑ ƒê√£ c·∫≠p nh·∫≠t tr·∫°ng th√°i!\n");
    }

    // L·ªçc theo tr·∫°ng th√°i
    public void Filter(bool isCompleted)
    {
        var list = _todos.Where(t => t.IsCompleted == isCompleted).ToList();
        if (!list.Any())
        {
            Console.WriteLine("‚ö†Ô∏è Kh√¥ng c√≥ c√¥ng vi·ªác n√†o ph√π h·ª£p.\n");
            return;
        }

        Console.WriteLine("üìÇ Danh s√°ch l·ªçc:");
        foreach (var todo in list)
        {
            Console.WriteLine(todo);
        }
        Console.WriteLine();
    }
}